{"version":3,"sources":["utils/helpers.js","components/game/GameComponent.js","components/game/Game.js","components/app/App.js","index.js"],"names":["drawMap","map","figure","height","width","result","initialValue","Array","fill","item","returnInitialMap","concat","forEach","row","x","y","color","hasConflicts","reduce","res","undefined","find","el","rotateFigure","mapWidth","figureClone","length","rotationX","rotationY","cos","Math","PI","sin","rotatedFigure","point","parseInt","hasIllegalCoords","i","withProp","array","prop","generateFigure","min","max","half","floor","figures","id","random","GameComponent","count","className","index","key","style","backgroundColor","reducer","state","action","type","nextFigure","changedFigure","payload","fieldHeight","nextItemX","mapItem","figureDropped","mapObject","keysToCount","Object","entries","filter","includes","calculateMapLines","isFinish","changeY","Game","useReducer","dispatch","useEffect","setInterval","window","addEventListener","App","ReactDOM","render","document","getElementById"],"mappings":"owBAAO,IAkCMA,EAAU,SAACC,EAAKC,EAAQC,EAAQC,GACzC,IAAIC,EAnCwB,SAACF,EAAQC,GAAyC,IAAlCE,EAAiC,uDAAlB,cAC3D,OAAO,IAAIC,MAAMJ,GAAQK,KAAKF,GAAcL,KAAI,SAAAQ,GAAI,OAAI,IAAIF,MAAMH,GAAOI,KAAKF,MAkCjEI,CAAiBP,EAAQC,GAStC,OAPAH,EAAIU,OAAOT,GAAQU,SAAQ,SAAAH,GACvB,IAAMI,EAAMR,EAAOI,EAAKK,GACpBD,IACAA,EAAIJ,EAAKM,GAAKN,EAAKO,UAIpBX,GAGEY,EAAe,SAACf,EAAQD,GACjC,OAAOC,EAAOgB,QAAO,SAACC,EAAKV,GACvB,OAAOU,QAA8DC,IAAvDnB,EAAIoB,MAAK,SAAAC,GAAE,OAAIA,EAAGR,IAAML,EAAKK,GAAKQ,EAAGP,IAAMN,EAAKM,QAC/D,IASMQ,EAAe,SAACrB,EAAQD,EAAKuB,GACtC,IACIC,EAAcvB,EAAOD,KAAI,SAAAQ,GAAI,YAASA,EAAT,CAAeK,EAAGL,EAAKK,EADrC,EACqDC,EAAGN,EAAKM,EAD7D,OADgC,EAIdU,EAAYA,EAAYC,OAAS,GAA5DC,EAJyC,EAI5Cb,EAAiBc,EAJ2B,EAI9Bb,EACjBc,EAAMC,KAAKD,KAAKC,KAAKC,GAAK,GAC1BC,EAAMF,KAAKE,KAAKF,KAAKC,GAAK,GAExBE,EAAgBR,EAAYxB,KAAI,SAAAiC,GAClC,OAAO,EAAP,GACOA,EADP,CAEIpB,EAAGqB,SAASN,GAAOK,EAAMpB,EAAIa,GAAaK,GAAOE,EAAMnB,EAAIa,GAAaD,GAV7D,EAWXZ,EAAGoB,SAASH,GAAOE,EAAMpB,EAAIa,GAAaE,GAAOK,EAAMnB,EAAIa,GAAaA,GAX7D,OAenB,OAAIX,EAAagB,EAAehC,IAtBX,SAACC,EAAQsB,GAC9B,OAAOtB,EAAOgB,QAAO,SAACC,EAAKV,GACvB,OAAOU,GAAOV,EAAKM,EAAI,GAAKN,EAAKM,GAAKS,KACvC,GAmBqCY,CAAiBH,EAAeT,GAC7DtB,EAAOD,KAAI,SAAAoC,GAAC,YAASA,MAErBJ,GAQTK,EAAW,SAACC,EAAOC,GACrB,OAAOD,EAAMtC,KAAI,SAAAoC,GAAC,YAASA,EAAT,GAAeG,OAOxBC,EAAiB,SAACrC,GAC3B,IAbmBsC,EAAKC,EAalBC,EAAOd,KAAKe,MAAMzC,EAAQ,GAI1B0C,EAAU,CACZR,EAAS,CAAC,CAACxB,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,GAAO,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,IAAQ,CAAC5B,MAAO,YACnGsB,EAAS,CAAC,CAACxB,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,IAAQ,CAAC5B,MAAO,YACvGsB,EAAS,CAAC,CAACxB,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,IAAQ,CAAC5B,MAAO,YACvGsB,EAAS,CAAC,CAACxB,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,IAAQ,CAAC5B,MAAO,YACvGsB,EAAS,CAAC,CAACxB,GAAI,EAAGC,EAAG6B,GAAO,CAAC9B,GAAI,EAAGC,EAAG6B,GAAO,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,IAAK,CAAC5B,MAAO,YACnGsB,EAAS,CAAC,CAACxB,GAAI,EAAGC,EAAG6B,GAAO,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,IAAQ,CAAC5B,MAAO,YACnGsB,EAAS,CAAC,CAACxB,GAAI,EAAGC,EAAG6B,GAAO,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,EAAO,GAAI,CAAC9B,GAAI,EAAGC,EAAG6B,IAAQ,CAAC5B,MAAO,aAGjG+B,EAlBCZ,SAAyB,KAAhBL,KAAKkB,UAmBrB,OAAOV,EAASQ,GA5BGJ,EA4BmB,EA5BdC,EA4BiBG,EAAQpB,OAAS,EA3BnDI,KAAKe,MAAMH,EAAMZ,KAAKkB,UAAYL,EAAM,EAAID,MA2BY,CAACK,QCnFrDE,EAzBO,SAAC,GAAkB,IAAjBhD,EAAgB,EAAhBA,IAAKiD,EAAW,EAAXA,MACzB,OACI,kBAAC,WAAD,KACI,yBAAKC,UAAW,gBACZ,yBAAKA,UAAW,gBAAiBD,GAE7BjD,EAAIA,KAAI,SAACY,EAAKuC,GACV,OACI,yBAAKD,UAAW,WAAYE,IAAKD,GAEzBvC,EAAIZ,KAAI,SAACQ,EAAM2C,GACX,OACI,yBAAKD,UAAW,YAAaE,IAAKD,EAAOE,MAAO,CAACC,gBAAiB9C,IAAlE,kB,yjBCL5C,IAGM+C,EAAU,SAACC,EAAOC,GACpB,GAAoB,YAAhBA,EAAOC,MAAsC,YAAhBD,EAAOC,KAAoB,CACxD,IAAIC,EAEJ,GAAoB,YAAhBF,EAAOC,KAEPC,EADiBH,EAAVvD,OACaD,KAAI,SAACQ,GAAD,YAAeA,EAAf,CAAqBK,EAAGL,EAAKK,EAAI,YACtD,GAAoB,YAAhB4C,EAAOC,KAAoB,CAC5B,IACFE,EADaJ,EAAVvD,OACoBD,KAAI,SAAAoC,GAAC,YAASA,EAAT,CAAYtB,EAAGsB,EAAEtB,EAAI2C,EAAOI,aAK5D,KAJwBD,EAAc3C,QAAO,SAACC,EAAKV,GAC3C,OAAOU,GAAQV,EAAKM,GAAK,GAAON,EAAKM,EAdrC,KAeD,KAAUE,EAAa4C,EAAeJ,EAAMxD,MAK/C,OAAO,KAAIwD,GAFXG,EAAaC,EAQrB,GF/BqB,SAAC3D,EAAQD,EAAK8D,GACvC,OAAO7D,EAAOgB,QAAO,SAACC,EAAKV,GACvB,IAAMuD,EAAYvD,EAAKK,EAAI,EAC3B,OAAOK,GAAQ6C,GAAaD,QAA0F3C,IAAzEnB,EAAIoB,MAAK,SAAA4C,GAAO,OAAIA,EAAQnD,IAAMkD,GAAaC,EAAQlD,IAAMN,EAAKM,QAChH,GEyByBmD,CAAcN,EAAYH,EAAMxD,IAvB3C,IAyBQ,CAAC,IAAD,EFxBI,SAACA,EAAKuB,GACnC,IAAM2C,EAAYlE,EAAIiB,QAAO,SAACC,EAAKV,GAC/B,OAAO,EAAP,GACOU,EADP,eAEKV,EAAKK,GAAKK,EAAIV,EAAKK,IAAM,IAAIH,OAAOF,OAE1C,IAEG2D,EAAcC,OAAOC,QAAQH,GAAWjD,QAAO,SAACC,EAAD,GAAwB,IAAD,mBAAhBkC,EAAgB,KACxE,OADwE,KAC9D3B,SAAWF,EACVL,EAAIR,QAAQ0C,GAEZlC,IAEZ,IAEH,MAAO,CACHlB,IAAKA,EAAIsE,QAAO,SAAA9D,GAAI,OAAK2D,EAAYI,SAAS/D,EAAKK,MAC9Cb,KAAI,SAAAQ,GAAI,YAASA,EAAT,CAAeK,EAAGL,EAAKK,EAAIsD,EAAYG,QAAO,SAAAjD,GAAE,OAAIb,EAAKK,EAAIQ,KAAII,YAC9EwB,MAAOkB,EAAY1C,QEMM+C,CAAkBhB,EAAMxD,IAAIU,OAAOiD,GA3BhD,GA2BD3D,EADU,EACVA,IAAKiD,EADK,EACLA,MAEZ,OF2EY,SAACjD,GACrB,YAA0CmB,IAAnCnB,EAAIoB,MAAK,SAAAZ,GAAI,OAAe,IAAXA,EAAKK,KE5EjB4D,CAASzE,GACF,KACAwD,EADP,CAEIvD,OAAQuC,EAhCR,GAiCAxC,IAAK,GACLiD,MAAO,IAGJ,KACAO,EADP,CAEIvD,OAAQuC,EAvCR,GAwCAxC,MACAiD,MAAOO,EAAMP,MAAQA,IAI7B,OAAO,KACAO,EADP,CAEIvD,OAAQ0D,IAGb,GAAoB,WAAhBF,EAAOC,KACd,OAAO,KACAF,EADP,CAEIvD,OAAQqB,EAAakC,EAAMvD,OAAQuD,EAAMxD,IArDjC,MA0Dd0E,EAAU,SAACb,GAAD,MAAc,CAACH,KAAM,UAAWG,YA+BjCc,EA5BF,WAAO,IAAD,EACWC,qBAAWrB,EAAS,CAACtD,OAAQuC,EA9DvC,GA8DoExC,IAAK,GAAIiD,MAAO,IADrF,mBACRO,EADQ,KACDqB,EADC,KAGfC,qBAAU,WACNC,aAAY,WACRF,EATW,CAACnB,KAAM,cAUnB,OACJ,IAEHoB,qBAAU,WACNE,OAAOC,iBAAiB,WAAW,YAAY,IAAV7B,EAAS,EAATA,IACrB,cAARA,EACAyB,EAASH,GAAS,IACH,eAARtB,EACPyB,EAASH,EAAQ,IACF,cAARtB,EACPyB,EApBO,CAACnB,KAAM,YAqBC,YAARN,GACPyB,EApBM,CAACnB,KAAM,gBAuBtB,IArBY,IAuBR1D,EAAsBwD,EAAtBxD,IAAKC,EAAiBuD,EAAjBvD,OAAQgD,EAASO,EAATP,MACpB,OAAO,kBAAC,EAAD,CAAejD,IAAKD,EAAQC,EAAKC,EApFvB,GADD,GAsFMgD,MAAOA,KCpFlBiC,EARH,WACR,OACI,yBAAKhC,UAAW,eACZ,kBAAC,EAAD,QCAZiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f4e11b2f.chunk.js","sourcesContent":["export const returnInitialMap = (height, width, initialValue = \"transparent\") => {\r\n    return new Array(height).fill(initialValue).map(item => new Array(width).fill(initialValue));\r\n};\r\n\r\nexport const figureDropped = (figure, map, fieldHeight) => {\r\n    return figure.reduce((res, item) => {\r\n        const nextItemX = item.x + 1;\r\n        return res || (nextItemX >= fieldHeight) || (map.find(mapItem => mapItem.x === nextItemX && mapItem.y === item.y) !== undefined);\r\n    }, false);\r\n};\r\n\r\nexport const calculateMapLines = (map, mapWidth) => {\r\n    const mapObject = map.reduce((res, item) => {\r\n        return {\r\n            ...res,\r\n            [item.x]: (res[item.x] || []).concat(item)\r\n        };\r\n    }, {});\r\n\r\n    const keysToCount = Object.entries(mapObject).reduce((res, [key, value]) => {\r\n        if (value.length === mapWidth) {\r\n            return res.concat(+key);\r\n        } else {\r\n            return res;\r\n        }\r\n    }, []);\r\n\r\n    return {\r\n        map: map.filter(item => !keysToCount.includes(item.x))\r\n            .map(item => ({...item, x: item.x + keysToCount.filter(el => item.x < el).length})),\r\n        count: keysToCount.length\r\n    }\r\n};\r\n\r\nexport const drawMap = (map, figure, height, width) => {\r\n    let result = returnInitialMap(height, width);\r\n\r\n    map.concat(figure).forEach(item => {\r\n        const row = result[item.x];\r\n        if (row) {\r\n            row[item.y] = item.color;\r\n        }\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\nexport const hasConflicts = (figure, map) => {\r\n    return figure.reduce((res, item) => {\r\n        return res || map.find(el => el.x === item.x && el.y === item.y) !== undefined\r\n    }, false);\r\n};\r\n\r\nconst hasIllegalCoords = (figure, mapWidth) => {\r\n    return figure.reduce((res, item) => {\r\n        return res || item.y < 0 || item.y >= mapWidth;\r\n    }, false);\r\n};\r\n\r\nexport const rotateFigure = (figure, map, mapWidth) => {\r\n    const howFarMove = 5,\r\n        figureClone = figure.map(item => ({...item, x: item.x + howFarMove, y: item.y + howFarMove}));\r\n\r\n    const {x: rotationX, y: rotationY} = figureClone[figureClone.length - 1],\r\n        cos = Math.cos(-Math.PI / 2),\r\n        sin = Math.sin(-Math.PI / 2);\r\n\r\n    const rotatedFigure = figureClone.map(point => {\r\n        return {\r\n            ...point,\r\n            x: parseInt(cos * (point.x - rotationX) - sin * (point.y - rotationY) + rotationX) - howFarMove,\r\n            y: parseInt(sin * (point.x - rotationX) + cos * (point.y - rotationY) + rotationY) - howFarMove\r\n        };\r\n    });\r\n\r\n    if (hasConflicts(rotatedFigure, map) || hasIllegalCoords(rotatedFigure, mapWidth)) {\r\n        return figure.map(i => ({...i}));\r\n    } else {\r\n        return rotatedFigure;\r\n    }\r\n};\r\n\r\nconst randomInteger = (min, max) => {\r\n    return Math.floor(min + Math.random() * (max + 1 - min));\r\n};\r\n\r\nconst withProp = (array, prop) => {\r\n    return array.map(i => ({...i, ...prop}));\r\n};\r\n\r\nconst generateId = () => {\r\n    return parseInt(Math.random() * 1000000000000);\r\n};\r\n\r\nexport const generateFigure = (width) => {\r\n    const half = Math.floor(width / 2);\r\n    /*\r\n    * при генерации присваивать цвет каждой фигуры (рандомайзер) и id (нужен для рисования контуров фигур)\r\n    * */\r\n    const figures = [\r\n        withProp([{x: -2, y: half - 1}, {x: -2, y: half}, {x: -2, y: half + 1}, {x: -1, y: half}], {color: \"#0031ff\"}),\r\n        withProp([{x: -1, y: half - 2}, {x: -1, y: half - 1}, {x: -1, y: half + 1}, {x: -1, y: half}], {color: \"#00b6df\"}),\r\n        withProp([{x: -2, y: half - 1}, {x: -1, y: half - 1}, {x: -1, y: half + 1}, {x: -1, y: half}], {color: \"#e17b00\"}),\r\n        withProp([{x: -2, y: half + 1}, {x: -1, y: half - 1}, {x: -1, y: half + 1}, {x: -1, y: half}], {color: \"#b700ff\"}),\r\n        withProp([{x: -2, y: half}, {x: -1, y: half}, {x: -2, y: half + 1}, {x: -1, y: half + 1}], {color: \"#e4e300\"}),\r\n        withProp([{x: -1, y: half}, {x: -2, y: half + 1}, {x: -1, y: half - 1}, {x: -2, y: half}], {color: \"#00e009\"}),\r\n        withProp([{x: -1, y: half}, {x: -2, y: half - 1}, {x: -1, y: half + 1}, {x: -2, y: half}], {color: \"#e20016\"})\r\n    ];\r\n\r\n    const id = generateId();\r\n    return withProp(figures[randomInteger(0, figures.length - 1)], {id});\r\n};\r\n\r\nexport const isFinish = (map) => {\r\n    return map.find(item => item.x === 0) !== undefined;\r\n};","import React, {Fragment} from \"react\";\r\n\r\nconst GameComponent = ({map, count}) => {\r\n    return (\r\n        <Fragment>\r\n            <div className={\"game-wrapper\"}>\r\n                <div className={\"game-counter\"}>{count}</div>\r\n                {\r\n                    map.map((row, index) => {\r\n                        return (\r\n                            <div className={\"game-row\"} key={index}>\r\n                                {\r\n                                    row.map((item, index) => {\r\n                                        return (\r\n                                            <div className={\"game-item\"} key={index} style={{backgroundColor: item}}>&nbsp;</div>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GameComponent;","import React, {useState, useEffect, useReducer} from 'react';\r\nimport {\r\n    calculateMapLines,\r\n    drawMap,\r\n    figureDropped,\r\n    generateFigure, hasConflicts, isFinish,rotateFigure,\r\n} from \"../../utils/helpers\";\r\nimport GameComponent from \"./GameComponent\";\r\n\r\nconst FIELD_WIDTH = 9;\r\nconst FIELD_HEIGHT = 20;\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === \"changeX\" || action.type === \"changeY\") {\r\n        let nextFigure;\r\n\r\n        if (action.type === \"changeX\") {\r\n            const {figure} = state;\r\n            nextFigure = figure.map((item) => ({...item, x: item.x + 1}));\r\n        } else if (action.type === \"changeY\") {\r\n            const {figure} = state,\r\n                changedFigure = figure.map(i => ({...i, y: i.y + action.payload})),\r\n                isMovementAllowed = changedFigure.reduce((res, item) => {\r\n                    return res && (item.y >= 0) && (item.y < FIELD_WIDTH);\r\n                }, true) && !hasConflicts(changedFigure, state.map);\r\n\r\n            if (isMovementAllowed) {\r\n                nextFigure = changedFigure;\r\n            } else {\r\n                return {...state};\r\n            }\r\n        }\r\n\r\n        const isFigureDropped = figureDropped(nextFigure, state.map, FIELD_HEIGHT);\r\n\r\n        if (isFigureDropped) {\r\n            const {map, count} = calculateMapLines(state.map.concat(nextFigure), FIELD_WIDTH);\r\n\r\n            if (isFinish(map)) {\r\n                return {\r\n                    ...state,\r\n                    figure: generateFigure(FIELD_WIDTH),\r\n                    map: [],\r\n                    count: 0\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    figure: generateFigure(FIELD_WIDTH),\r\n                    map,\r\n                    count: state.count + count\r\n                };\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                figure: nextFigure\r\n            };\r\n        }\r\n    } else if (action.type === \"rotate\") {\r\n        return {\r\n            ...state,\r\n            figure: rotateFigure(state.figure, state.map, FIELD_WIDTH)\r\n        };\r\n    }\r\n};\r\nconst changeX = () => ({type: \"changeX\"});\r\nconst changeY = (payload) => ({type: \"changeY\", payload});\r\nconst rotate = () => ({type: \"rotate\"});\r\n\r\nconst Game = () => {\r\n    const [state, dispatch] = useReducer(reducer, {figure: generateFigure(FIELD_WIDTH), map: [], count: 0});\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            dispatch(changeX());\r\n        }, 500);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", ({key}) => {\r\n            if (key === \"ArrowLeft\") {\r\n                dispatch(changeY(-1));\r\n            } else if (key === \"ArrowRight\") {\r\n                dispatch(changeY(1));\r\n            } else if (key === \"ArrowDown\") {\r\n                dispatch(changeX());\r\n            } else if (key === \"ArrowUp\") {\r\n                dispatch(rotate())\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const {map, figure, count} = state;\r\n    return <GameComponent map={drawMap(map, figure, FIELD_HEIGHT, FIELD_WIDTH)}\r\n                          count={count}/>;\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport Game from \"../game/Game\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className={\"app-wrapper\"}>\r\n            <Game/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './components/app/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}